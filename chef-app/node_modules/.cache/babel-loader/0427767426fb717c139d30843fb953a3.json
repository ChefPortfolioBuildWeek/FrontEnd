{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Documents\\\\Web24\\\\Build Week\\\\Frontend\\\\chef-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\User\\\\Documents\\\\Web24\\\\Build Week\\\\Frontend\\\\chef-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Web24\\\\Build Week\\\\Frontend\\\\chef-app\\\\src\\\\ChefLogin.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    padding: 1%;\\n    margin: 1%;\\n    border: 2px solid black;\\n    width: 20%;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    background-color: #52ad9c;\\n    color: 347624f;\\n    width: 90%;\\n    margin: 0 auto;\\n    border: 2px solid #47624f;\\n    border-radius: 10px;\\n    height: 80vh;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport chefPosting from './ChefPostPage';\nimport styled from 'styled-components';\nconst HomePage = styled.div(_templateObject());\nconst BoxField = styled(Field)(_templateObject2());\n\nconst ChefOnboarding = ({\n  values,\n  touched,\n  errors,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        chefs = _useState2[0],\n        setChefs = _useState2[1];\n\n  useEffect(() => {\n    status && setChefs(chefs => [...chefs, status]);\n  }, [status]);\n  return React.createElement(HomePage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(BoxField, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, errors.name), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(BoxField, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, errors.email), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(BoxField, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, errors.password), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Terms Of Service\"), React.createElement(BoxField, {\n    type: \"checkbox\",\n    name: \"termsOfService\",\n    checked: values.termsOfService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Route, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Login\"))), React.createElement(Route, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/chefposts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Guest\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/chefposts\",\n    component: chefPosting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))));\n};\n\nconst FormikChefOnboarding = withFormik({\n  mapPropsToValues({\n    name,\n    email,\n    password,\n    termsOfService\n  }) {\n    return {\n      name: name || '',\n      email: email || '',\n      password: password || '',\n      termsOfService: termsOfService || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Name is a required field'),\n    email: Yup.string().required('Email is a required field'),\n    password: Yup.string().required('Password is a required field')\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post('https://reqres.in/api/users', values).then(res => {\n      setStatus(res.data);\n    }).catch(err => console.log(err.response));\n  }\n\n})(ChefOnboarding);\nexport default FormikChefOnboarding;","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\Web24\\Build Week\\Frontend\\chef-app\\src\\ChefLogin.js"],"names":["React","useState","useEffect","withFormik","Form","Field","Route","Link","Switch","Yup","axios","chefPosting","styled","HomePage","div","BoxField","ChefOnboarding","values","touched","errors","status","chefs","setChefs","name","email","password","termsOfService","FormikChefOnboarding","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","setStatus","post","then","res","data","catch","err","console","log","response"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,KAA1B,QAAsC,QAAtC;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,kBAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAV,mBAAd;AASA,MAAMC,QAAQ,GAAGH,MAAM,CAACP,KAAD,CAAT,oBAAd;;AAOA,MAAMW,cAAc,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA;AAA1B,CAAD,KAAuC;AAAA,oBAChCnB,QAAQ,CAAC,EAAD,CADwB;AAAA;AAAA,QACnDoB,KADmD;AAAA,QAC5CC,QAD4C;;AAE1DpB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,MAAM,IAAIE,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWD,MAAX,CAAV,CAAlB;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,WAAW,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMKF,OAAO,CAACK,IAAR,IAAgBJ,MAAM,CAACI,IAAvB,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,MAAM,CAACI,IAAX,CAPR,EAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARN,EASI,oBAAC,QAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,WAAW,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAcKL,OAAO,CAACM,KAAR,IAAiBL,MAAM,CAACK,KAAxB,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,MAAM,CAACK,KAAX,CAfR,EAgBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBN,EAiBI,oBAAC,QAAD;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,WAAW,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAsBKN,OAAO,CAACO,QAAR,IAAoBN,MAAM,CAACM,QAA3B,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,MAAM,CAACM,QAAX,CAvBR,EAwBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBN,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBJ,EA0BI,oBAAC,QAAD;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,IAAI,EAAC,gBAFL;AAGA,IAAA,OAAO,EAAER,MAAM,CAACS,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EA8BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BN,EA+BI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHH,CA/BJ,CAFJ,EAuCI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,SAAS,EAAEf,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAvCJ,CADJ;AAuDH,CA7DD;;AAiEA,MAAMgB,oBAAoB,GAAGxB,UAAU,CAAC;AACpCyB,EAAAA,gBAAgB,CAAC;AAACL,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,GAAD,EAA0C;AACtD,WAAO;AACHH,MAAAA,IAAI,EAAEA,IAAI,IAAI,EADX;AAEHC,MAAAA,KAAK,EAAEA,KAAK,IAAI,EAFb;AAGHC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EAHnB;AAIHC,MAAAA,cAAc,EAAEA,cAAc,IAAI;AAJ/B,KAAP;AAMH,GARmC;;AASpCG,EAAAA,gBAAgB,EAAEpB,GAAG,CAACqB,MAAJ,GAAaC,KAAb,CAAmB;AACjCR,IAAAA,IAAI,EAAEd,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CAD2B;AAEjCT,IAAAA,KAAK,EAAEf,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB,CAF0B;AAGjCR,IAAAA,QAAQ,EAAEhB,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB;AAHuB,GAAnB,CATkB;;AAcpCC,EAAAA,YAAY,CAACjB,MAAD,EAAS;AAACkB,IAAAA;AAAD,GAAT,EAAsB;AAC9BzB,IAAAA,KAAK,CACA0B,IADL,CACU,6BADV,EACyCnB,MADzC,EAEKoB,IAFL,CAEUC,GAAG,IAAI;AAACH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAL,CAAT;AAAqB,KAFvC,EAGKC,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB,CAHlB;AAIH;;AAnBmC,CAAD,CAAV,CAoB1B5B,cApB0B,CAA7B;AAqBA,eAAeW,oBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {withFormik, Form, Field} from 'formik';\r\nimport {Route, Link, Switch} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport chefPosting from './ChefPostPage';\r\nimport styled from 'styled-components';\r\n\r\nconst HomePage = styled.div`\r\n    background-color: #52ad9c;\r\n    color: 347624f;\r\n    width: 90%;\r\n    margin: 0 auto;\r\n    border: 2px solid #47624f;\r\n    border-radius: 10px;\r\n    height: 80vh;\r\n`;\r\nconst BoxField = styled(Field)`\r\n    padding: 1%;\r\n    margin: 1%;\r\n    border: 2px solid black;\r\n    width: 20%;\r\n`;\r\n\r\nconst ChefOnboarding = ({values, touched, errors, status}) => {\r\n    const [chefs, setChefs] = useState([]);\r\n    useEffect(() => {\r\n        status && setChefs(chefs => [...chefs, status])\r\n    }, [status])\r\n\r\n    return (\r\n        <HomePage>\r\n            <h1>Login</h1>\r\n            <Form>\r\n                <BoxField\r\n                type='text'\r\n                name='name'\r\n                placeholder='name'\r\n                />\r\n                {touched.name && errors.name && (\r\n                    <p>{errors.name}</p>\r\n                )}<br />\r\n                <BoxField\r\n                type='text'\r\n                name='email'\r\n                placeholder='email'\r\n                />\r\n                {touched.email && errors.email && (\r\n                    <p>{errors.email}</p>\r\n                )}<br />\r\n                <BoxField\r\n                type='password'\r\n                name='password'\r\n                placeholder='password'\r\n                />\r\n                {touched.password && errors.password && (\r\n                    <p>{errors.password}</p>\r\n                )}<br />\r\n                <h2>Terms Of Service</h2>\r\n                <BoxField\r\n                type='checkbox'\r\n                name='termsOfService'\r\n                checked={values.termsOfService}\r\n                /><br />\r\n                <Route>\r\n                   {/* <Route exact path='/chefposts' component={chefPosting} />\r\n                   <button type='submit' onClick={chefPosting}>Login</button> */}\r\n                   <button>Login</button>\r\n                </Route>\r\n            </Form>\r\n            <Route>\r\n                <Link to='/chefposts'>Guest</Link>\r\n                <Switch>\r\n                    <Route exact path='/chefposts' component={chefPosting} />\r\n                </Switch>\r\n            </Route>\r\n            {/* {chefs.map(chef => (\r\n                <div key={chef.id}>\r\n                    <p>Name: {chef.name}</p>\r\n                    <p>Email: {chef.email}</p>\r\n                    <p>Password Length: {chef.password.length}</p>\r\n                </div>\r\n            ))} */}\r\n        </HomePage>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst FormikChefOnboarding = withFormik({\r\n    mapPropsToValues({name, email, password, termsOfService}) {\r\n        return {\r\n            name: name || '',\r\n            email: email || '',\r\n            password: password || '',\r\n            termsOfService: termsOfService || false\r\n        };\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string().required('Name is a required field'),\r\n        email: Yup.string().required('Email is a required field'),\r\n        password: Yup.string().required('Password is a required field'),\r\n    }),\r\n    handleSubmit(values, {setStatus}) {\r\n        axios\r\n            .post('https://reqres.in/api/users', values)\r\n            .then(res => {setStatus(res.data);})\r\n            .catch(err => console.log(err.response));\r\n    }\r\n})(ChefOnboarding);\r\nexport default FormikChefOnboarding;"]},"metadata":{},"sourceType":"module"}