{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Documents\\\\Web24\\\\Build Week\\\\Frontend\\\\chef-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Web24\\\\Build Week\\\\Frontend\\\\chef-app\\\\src\\\\ChefPostPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst ChefPosting = ({\n  values,\n  touched,\n  errors,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        posts = _useState2[0],\n        setPosts = _useState2[1];\n\n  useEffect(() => {\n    status && setPosts(posts => [...posts, status]);\n  }, [status]); // image\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Make New Post\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"title/name of dish\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), touched.title && errors.title && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, errors.title), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"select\",\n    name: \"mealType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Please Choose an Option\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Breakfast\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Lunch\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Dinner\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Snack\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Dessert\")), touched.mealType && errors.mealType && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, errors.mealType), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"textarea\",\n    type: \"text\",\n    name: \"ingredients\",\n    placeholder: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"textarea\",\n    type: \"text\",\n    name: \"instructions\",\n    placeholder: \"instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Post\")), posts.map(post => React.createElement(\"div\", {\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Dish: \", post.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Meal Type: \", post.mealType), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Ingredients: \", post.ingredients), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Instructions: \", post.instructions))));\n};\n\nconst FormikChefPosting = withFormik({\n  mapPropsToValues({\n    title,\n    mealType\n  }) {\n    return {\n      title: title || '',\n      mealType: mealType || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required('Title is a required field'),\n    mealType: Yup.string().oneOf(['Breakfast', 'Lunch', 'Dinner', 'Snack', 'Dessert']).required('Please select one')\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post('https://reqres.in/api/users', values).then(res => {\n      setStatus(res.data);\n    }).catch(err => console.log(err.response));\n  }\n\n})(ChefPosting);\nexport default FormikChefPosting;","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\Web24\\Build Week\\Frontend\\chef-app\\src\\ChefPostPage.js"],"names":["React","useState","useEffect","withFormik","Form","Field","Yup","axios","ChefPosting","values","touched","errors","status","posts","setPosts","title","mealType","map","post","id","ingredients","instructions","FormikChefPosting","mapPropsToValues","validationSchema","object","shape","string","required","oneOf","handleSubmit","setStatus","then","res","data","catch","err","console","log","response"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {withFormik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst ChefPosting = ({values, touched, errors, status}) => {\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        status && setPosts(posts => [...posts, status])\r\n    }, [status])\r\n// image\r\n    return (\r\n        <div>\r\n            <h1>Make New Post</h1>\r\n            <Form>\r\n                <Field\r\n                type='text'\r\n                name='title'\r\n                placeholder='title/name of dish'\r\n                />\r\n                {touched.title && errors.title && (\r\n                    <p>{errors.title}</p>\r\n                )}<br />\r\n                <Field component='select' name='mealType'>\r\n                    <option>Please Choose an Option</option>\r\n                    <option>Breakfast</option>\r\n                    <option>Lunch</option>\r\n                    <option>Dinner</option>\r\n                    <option>Snack</option>\r\n                    <option>Dessert</option>\r\n                </Field>\r\n                {touched.mealType && errors.mealType && (\r\n                    <p>{errors.mealType}</p>\r\n                )}<br />\r\n                <Field\r\n                component='textarea'\r\n                type='text'\r\n                name='ingredients'\r\n                placeholder='ingredients'\r\n                /><br />\r\n                <Field\r\n                component='textarea'\r\n                type='text'\r\n                name='instructions'\r\n                placeholder='instructions'\r\n                /><br />\r\n                <button type='submit'>Post</button>\r\n            </Form>\r\n            {posts.map(post => (\r\n                <div key={post.id}>\r\n                    <p>Dish: {post.title}</p>\r\n                    <p>Meal Type: {post.mealType}</p>\r\n                    <p>Ingredients: {post.ingredients}</p>\r\n                    <p>Instructions: {post.instructions}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst FormikChefPosting = withFormik({\r\n    mapPropsToValues({title, mealType}) {\r\n        return {\r\n            title: title || '',\r\n            mealType: mealType || '',\r\n        };\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        title: Yup.string().required('Title is a required field'),\r\n        mealType: Yup.string()\r\n            .oneOf(['Breakfast', 'Lunch', 'Dinner', 'Snack', 'Dessert'])\r\n            .required('Please select one')\r\n    }),\r\n    handleSubmit(values, {setStatus}) {\r\n        axios\r\n            .post('https://reqres.in/api/users', values)\r\n            .then(res => {setStatus(res.data);})\r\n            .catch(err => console.log(err.response));\r\n    }\r\n})(ChefPosting);\r\nexport default FormikChefPosting;"]},"metadata":{},"sourceType":"module"}